openapi: 3.0.0
info:
  title: User API
  description: API for user management
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local development server

paths:
  /signUp:
    post:
      summary: Create a new user
      description: Endpoint to create a new user account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  format: email
                  example: "john@example.com"
                password:
                  type: string
                  format: password
                  example: "password123"
                createdDate:
                  type: string
                  format: date
                  example: "2025-02-18"
                userType:
                  type: string
                  enum: [student, teacher, parent, private tutor]
                  example: "student"
      responses:
        "201":
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User signed up successfully"
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "Validation failed"

  /user/{id}:
    get:
      summary: Get user details
      description: Fetches user details by ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "1"
      responses:
        "200":
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  fullName:
                    type: string
                    example: "John Doe"
                  email:
                    type: string
                    example: "john@example.com"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User not found"
